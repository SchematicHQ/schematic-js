/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CreatePlanRequestBody
 */
export interface CreatePlanRequestBody {
  /**
   *
   * @type {string}
   * @memberof CreatePlanRequestBody
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof CreatePlanRequestBody
   */
  icon?: string | null;
  /**
   *
   * @type {string}
   * @memberof CreatePlanRequestBody
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof CreatePlanRequestBody
   */
  planType: CreatePlanRequestBodyPlanTypeEnum;
}

/**
 * @export
 */
export const CreatePlanRequestBodyPlanTypeEnum = {
  Plan: "plan",
  AddOn: "add_on",
} as const;
export type CreatePlanRequestBodyPlanTypeEnum =
  (typeof CreatePlanRequestBodyPlanTypeEnum)[keyof typeof CreatePlanRequestBodyPlanTypeEnum];

/**
 * Check if a given object implements the CreatePlanRequestBody interface.
 */
export function instanceOfCreatePlanRequestBody(
  value: object,
): value is CreatePlanRequestBody {
  if (!("description" in value) || value["description"] === undefined)
    return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("planType" in value) || value["planType"] === undefined) return false;
  return true;
}

export function CreatePlanRequestBodyFromJSON(
  json: any,
): CreatePlanRequestBody {
  return CreatePlanRequestBodyFromJSONTyped(json, false);
}

export function CreatePlanRequestBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreatePlanRequestBody {
  if (json == null) {
    return json;
  }
  return {
    description: json["description"],
    icon: json["icon"] == null ? undefined : json["icon"],
    name: json["name"],
    planType: json["plan_type"],
  };
}

export function CreatePlanRequestBodyToJSON(json: any): CreatePlanRequestBody {
  return CreatePlanRequestBodyToJSONTyped(json, false);
}

export function CreatePlanRequestBodyToJSONTyped(
  value?: CreatePlanRequestBody | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    description: value["description"],
    icon: value["icon"],
    name: value["name"],
    plan_type: value["planType"],
  };
}
