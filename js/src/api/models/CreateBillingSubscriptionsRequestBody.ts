/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { BillingProductPricing } from "./BillingProductPricing";
import {
  BillingProductPricingFromJSON,
  BillingProductPricingFromJSONTyped,
  BillingProductPricingToJSON,
  BillingProductPricingToJSONTyped,
} from "./BillingProductPricing";

/**
 *
 * @export
 * @interface CreateBillingSubscriptionsRequestBody
 */
export interface CreateBillingSubscriptionsRequestBody {
  /**
   *
   * @type {string}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  currency: string;
  /**
   *
   * @type {string}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  customerExternalId: string;
  /**
   *
   * @type {Date}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  expiredAt: Date;
  /**
   *
   * @type {string}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  interval?: string | null;
  /**
   *
   * @type {object}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  metadata?: object | null;
  /**
   *
   * @type {number}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  periodEnd?: number | null;
  /**
   *
   * @type {number}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  periodStart?: number | null;
  /**
   *
   * @type {Array<BillingProductPricing>}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  productExternalIds: Array<BillingProductPricing>;
  /**
   *
   * @type {string}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  status?: string | null;
  /**
   *
   * @type {string}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  subscriptionExternalId: string;
  /**
   *
   * @type {number}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  totalPrice: number;
  /**
   *
   * @type {number}
   * @memberof CreateBillingSubscriptionsRequestBody
   */
  trialEnd?: number | null;
}

/**
 * Check if a given object implements the CreateBillingSubscriptionsRequestBody interface.
 */
export function instanceOfCreateBillingSubscriptionsRequestBody(
  value: object,
): value is CreateBillingSubscriptionsRequestBody {
  if (!("currency" in value) || value["currency"] === undefined) return false;
  if (
    !("customerExternalId" in value) ||
    value["customerExternalId"] === undefined
  )
    return false;
  if (!("expiredAt" in value) || value["expiredAt"] === undefined) return false;
  if (
    !("productExternalIds" in value) ||
    value["productExternalIds"] === undefined
  )
    return false;
  if (
    !("subscriptionExternalId" in value) ||
    value["subscriptionExternalId"] === undefined
  )
    return false;
  if (!("totalPrice" in value) || value["totalPrice"] === undefined)
    return false;
  return true;
}

export function CreateBillingSubscriptionsRequestBodyFromJSON(
  json: any,
): CreateBillingSubscriptionsRequestBody {
  return CreateBillingSubscriptionsRequestBodyFromJSONTyped(json, false);
}

export function CreateBillingSubscriptionsRequestBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CreateBillingSubscriptionsRequestBody {
  if (json == null) {
    return json;
  }
  return {
    currency: json["currency"],
    customerExternalId: json["customer_external_id"],
    expiredAt: new Date(json["expired_at"]),
    interval: json["interval"] == null ? undefined : json["interval"],
    metadata: json["metadata"] == null ? undefined : json["metadata"],
    periodEnd: json["period_end"] == null ? undefined : json["period_end"],
    periodStart:
      json["period_start"] == null ? undefined : json["period_start"],
    productExternalIds: (json["product_external_ids"] as Array<any>).map(
      BillingProductPricingFromJSON,
    ),
    status: json["status"] == null ? undefined : json["status"],
    subscriptionExternalId: json["subscription_external_id"],
    totalPrice: json["total_price"],
    trialEnd: json["trial_end"] == null ? undefined : json["trial_end"],
  };
}

export function CreateBillingSubscriptionsRequestBodyToJSON(
  json: any,
): CreateBillingSubscriptionsRequestBody {
  return CreateBillingSubscriptionsRequestBodyToJSONTyped(json, false);
}

export function CreateBillingSubscriptionsRequestBodyToJSONTyped(
  value?: CreateBillingSubscriptionsRequestBody | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    currency: value["currency"],
    customer_external_id: value["customerExternalId"],
    expired_at: value["expiredAt"].toISOString(),
    interval: value["interval"],
    metadata: value["metadata"],
    period_end: value["periodEnd"],
    period_start: value["periodStart"],
    product_external_ids: (value["productExternalIds"] as Array<any>).map(
      BillingProductPricingToJSON,
    ),
    status: value["status"],
    subscription_external_id: value["subscriptionExternalId"],
    total_price: value["totalPrice"],
    trial_end: value["trialEnd"],
  };
}
