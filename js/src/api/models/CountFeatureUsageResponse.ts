/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CountResponse } from "./CountResponse";
import {
  CountResponseFromJSON,
  CountResponseFromJSONTyped,
  CountResponseToJSON,
  CountResponseToJSONTyped,
} from "./CountResponse";
import type { CountFeatureUsageParams } from "./CountFeatureUsageParams";
import {
  CountFeatureUsageParamsFromJSON,
  CountFeatureUsageParamsFromJSONTyped,
  CountFeatureUsageParamsToJSON,
  CountFeatureUsageParamsToJSONTyped,
} from "./CountFeatureUsageParams";

/**
 *
 * @export
 * @interface CountFeatureUsageResponse
 */
export interface CountFeatureUsageResponse {
  /**
   *
   * @type {CountResponse}
   * @memberof CountFeatureUsageResponse
   */
  data: CountResponse;
  /**
   *
   * @type {CountFeatureUsageParams}
   * @memberof CountFeatureUsageResponse
   */
  params: CountFeatureUsageParams;
}

/**
 * Check if a given object implements the CountFeatureUsageResponse interface.
 */
export function instanceOfCountFeatureUsageResponse(
  value: object,
): value is CountFeatureUsageResponse {
  if (!("data" in value) || value["data"] === undefined) return false;
  if (!("params" in value) || value["params"] === undefined) return false;
  return true;
}

export function CountFeatureUsageResponseFromJSON(
  json: any,
): CountFeatureUsageResponse {
  return CountFeatureUsageResponseFromJSONTyped(json, false);
}

export function CountFeatureUsageResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountFeatureUsageResponse {
  if (json == null) {
    return json;
  }
  return {
    data: CountResponseFromJSON(json["data"]),
    params: CountFeatureUsageParamsFromJSON(json["params"]),
  };
}

export function CountFeatureUsageResponseToJSON(
  json: any,
): CountFeatureUsageResponse {
  return CountFeatureUsageResponseToJSONTyped(json, false);
}

export function CountFeatureUsageResponseToJSONTyped(
  value?: CountFeatureUsageResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    data: CountResponseToJSON(value["data"]),
    params: CountFeatureUsageParamsToJSON(value["params"]),
  };
}
