/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CountResponse } from "./CountResponse";
import {
  CountResponseFromJSON,
  CountResponseFromJSONTyped,
  CountResponseToJSON,
  CountResponseToJSONTyped,
} from "./CountResponse";
import type { CountFlagsParams } from "./CountFlagsParams";
import {
  CountFlagsParamsFromJSON,
  CountFlagsParamsFromJSONTyped,
  CountFlagsParamsToJSON,
  CountFlagsParamsToJSONTyped,
} from "./CountFlagsParams";

/**
 *
 * @export
 * @interface CountFlagsResponse
 */
export interface CountFlagsResponse {
  /**
   *
   * @type {CountResponse}
   * @memberof CountFlagsResponse
   */
  data: CountResponse;
  /**
   *
   * @type {CountFlagsParams}
   * @memberof CountFlagsResponse
   */
  params: CountFlagsParams;
}

/**
 * Check if a given object implements the CountFlagsResponse interface.
 */
export function instanceOfCountFlagsResponse(
  value: object,
): value is CountFlagsResponse {
  if (!("data" in value) || value["data"] === undefined) return false;
  if (!("params" in value) || value["params"] === undefined) return false;
  return true;
}

export function CountFlagsResponseFromJSON(json: any): CountFlagsResponse {
  return CountFlagsResponseFromJSONTyped(json, false);
}

export function CountFlagsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountFlagsResponse {
  if (json == null) {
    return json;
  }
  return {
    data: CountResponseFromJSON(json["data"]),
    params: CountFlagsParamsFromJSON(json["params"]),
  };
}

export function CountFlagsResponseToJSON(json: any): CountFlagsResponse {
  return CountFlagsResponseToJSONTyped(json, false);
}

export function CountFlagsResponseToJSONTyped(
  value?: CountFlagsResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    data: CountResponseToJSON(value["data"]),
    params: CountFlagsParamsToJSON(value["params"]),
  };
}
