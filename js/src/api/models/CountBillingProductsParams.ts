/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Input parameters
 * @export
 * @interface CountBillingProductsParams
 */
export interface CountBillingProductsParams {
  /**
   *
   * @type {Array<string>}
   * @memberof CountBillingProductsParams
   */
  ids?: Array<string>;
  /**
   * Page limit (default 100)
   * @type {number}
   * @memberof CountBillingProductsParams
   */
  limit?: number;
  /**
   *
   * @type {string}
   * @memberof CountBillingProductsParams
   */
  name?: string;
  /**
   * Page offset (default 0)
   * @type {number}
   * @memberof CountBillingProductsParams
   */
  offset?: number;
  /**
   *
   * @type {string}
   * @memberof CountBillingProductsParams
   */
  priceUsageType?: string;
  /**
   *
   * @type {string}
   * @memberof CountBillingProductsParams
   */
  q?: string;
  /**
   * Filter products that have prices
   * @type {boolean}
   * @memberof CountBillingProductsParams
   */
  withPricesOnly?: boolean;
  /**
   * Filter products that have zero price for free subscription type
   * @type {boolean}
   * @memberof CountBillingProductsParams
   */
  withZeroPrice?: boolean;
  /**
   * Filter products that are not linked to any plan
   * @type {boolean}
   * @memberof CountBillingProductsParams
   */
  withoutLinkedToPlan?: boolean;
}

/**
 * Check if a given object implements the CountBillingProductsParams interface.
 */
export function instanceOfCountBillingProductsParams(
  value: object,
): value is CountBillingProductsParams {
  return true;
}

export function CountBillingProductsParamsFromJSON(
  json: any,
): CountBillingProductsParams {
  return CountBillingProductsParamsFromJSONTyped(json, false);
}

export function CountBillingProductsParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountBillingProductsParams {
  if (json == null) {
    return json;
  }
  return {
    ids: json["ids"] == null ? undefined : json["ids"],
    limit: json["limit"] == null ? undefined : json["limit"],
    name: json["name"] == null ? undefined : json["name"],
    offset: json["offset"] == null ? undefined : json["offset"],
    priceUsageType:
      json["price_usage_type"] == null ? undefined : json["price_usage_type"],
    q: json["q"] == null ? undefined : json["q"],
    withPricesOnly:
      json["with_prices_only"] == null ? undefined : json["with_prices_only"],
    withZeroPrice:
      json["with_zero_price"] == null ? undefined : json["with_zero_price"],
    withoutLinkedToPlan:
      json["without_linked_to_plan"] == null
        ? undefined
        : json["without_linked_to_plan"],
  };
}

export function CountBillingProductsParamsToJSON(
  json: any,
): CountBillingProductsParams {
  return CountBillingProductsParamsToJSONTyped(json, false);
}

export function CountBillingProductsParamsToJSONTyped(
  value?: CountBillingProductsParams | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ids: value["ids"],
    limit: value["limit"],
    name: value["name"],
    offset: value["offset"],
    price_usage_type: value["priceUsageType"],
    q: value["q"],
    with_prices_only: value["withPricesOnly"],
    with_zero_price: value["withZeroPrice"],
    without_linked_to_plan: value["withoutLinkedToPlan"],
  };
}
