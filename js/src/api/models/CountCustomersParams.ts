/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Input parameters
 * @export
 * @interface CountCustomersParams
 */
export interface CountCustomersParams {
  /**
   *
   * @type {boolean}
   * @memberof CountCustomersParams
   */
  failedToImport?: boolean;
  /**
   * Page limit (default 100)
   * @type {number}
   * @memberof CountCustomersParams
   */
  limit?: number;
  /**
   *
   * @type {string}
   * @memberof CountCustomersParams
   */
  name?: string;
  /**
   * Page offset (default 0)
   * @type {number}
   * @memberof CountCustomersParams
   */
  offset?: number;
  /**
   *
   * @type {string}
   * @memberof CountCustomersParams
   */
  q?: string;
}

/**
 * Check if a given object implements the CountCustomersParams interface.
 */
export function instanceOfCountCustomersParams(
  value: object,
): value is CountCustomersParams {
  return true;
}

export function CountCustomersParamsFromJSON(json: any): CountCustomersParams {
  return CountCustomersParamsFromJSONTyped(json, false);
}

export function CountCustomersParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountCustomersParams {
  if (json == null) {
    return json;
  }
  return {
    failedToImport:
      json["failed_to_import"] == null ? undefined : json["failed_to_import"],
    limit: json["limit"] == null ? undefined : json["limit"],
    name: json["name"] == null ? undefined : json["name"],
    offset: json["offset"] == null ? undefined : json["offset"],
    q: json["q"] == null ? undefined : json["q"],
  };
}

export function CountCustomersParamsToJSON(json: any): CountCustomersParams {
  return CountCustomersParamsToJSONTyped(json, false);
}

export function CountCustomersParamsToJSONTyped(
  value?: CountCustomersParams | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    failed_to_import: value["failedToImport"],
    limit: value["limit"],
    name: value["name"],
    offset: value["offset"],
    q: value["q"],
  };
}
