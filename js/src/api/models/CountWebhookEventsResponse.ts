/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CountResponse } from "./CountResponse";
import {
  CountResponseFromJSON,
  CountResponseFromJSONTyped,
  CountResponseToJSON,
  CountResponseToJSONTyped,
} from "./CountResponse";
import type { CountWebhookEventsParams } from "./CountWebhookEventsParams";
import {
  CountWebhookEventsParamsFromJSON,
  CountWebhookEventsParamsFromJSONTyped,
  CountWebhookEventsParamsToJSON,
  CountWebhookEventsParamsToJSONTyped,
} from "./CountWebhookEventsParams";

/**
 *
 * @export
 * @interface CountWebhookEventsResponse
 */
export interface CountWebhookEventsResponse {
  /**
   *
   * @type {CountResponse}
   * @memberof CountWebhookEventsResponse
   */
  data: CountResponse;
  /**
   *
   * @type {CountWebhookEventsParams}
   * @memberof CountWebhookEventsResponse
   */
  params: CountWebhookEventsParams;
}

/**
 * Check if a given object implements the CountWebhookEventsResponse interface.
 */
export function instanceOfCountWebhookEventsResponse(
  value: object,
): value is CountWebhookEventsResponse {
  if (!("data" in value) || value["data"] === undefined) return false;
  if (!("params" in value) || value["params"] === undefined) return false;
  return true;
}

export function CountWebhookEventsResponseFromJSON(
  json: any,
): CountWebhookEventsResponse {
  return CountWebhookEventsResponseFromJSONTyped(json, false);
}

export function CountWebhookEventsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountWebhookEventsResponse {
  if (json == null) {
    return json;
  }
  return {
    data: CountResponseFromJSON(json["data"]),
    params: CountWebhookEventsParamsFromJSON(json["params"]),
  };
}

export function CountWebhookEventsResponseToJSON(
  json: any,
): CountWebhookEventsResponse {
  return CountWebhookEventsResponseToJSONTyped(json, false);
}

export function CountWebhookEventsResponseToJSONTyped(
  value?: CountWebhookEventsResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    data: CountResponseToJSON(value["data"]),
    params: CountWebhookEventsParamsToJSON(value["params"]),
  };
}
