/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { CountResponse } from "./CountResponse";
import {
  CountResponseFromJSON,
  CountResponseFromJSONTyped,
  CountResponseToJSON,
  CountResponseToJSONTyped,
} from "./CountResponse";
import type { CountFeaturesParams } from "./CountFeaturesParams";
import {
  CountFeaturesParamsFromJSON,
  CountFeaturesParamsFromJSONTyped,
  CountFeaturesParamsToJSON,
  CountFeaturesParamsToJSONTyped,
} from "./CountFeaturesParams";

/**
 *
 * @export
 * @interface CountFeaturesResponse
 */
export interface CountFeaturesResponse {
  /**
   *
   * @type {CountResponse}
   * @memberof CountFeaturesResponse
   */
  data: CountResponse;
  /**
   *
   * @type {CountFeaturesParams}
   * @memberof CountFeaturesResponse
   */
  params: CountFeaturesParams;
}

/**
 * Check if a given object implements the CountFeaturesResponse interface.
 */
export function instanceOfCountFeaturesResponse(
  value: object,
): value is CountFeaturesResponse {
  if (!("data" in value) || value["data"] === undefined) return false;
  if (!("params" in value) || value["params"] === undefined) return false;
  return true;
}

export function CountFeaturesResponseFromJSON(
  json: any,
): CountFeaturesResponse {
  return CountFeaturesResponseFromJSONTyped(json, false);
}

export function CountFeaturesResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CountFeaturesResponse {
  if (json == null) {
    return json;
  }
  return {
    data: CountResponseFromJSON(json["data"]),
    params: CountFeaturesParamsFromJSON(json["params"]),
  };
}

export function CountFeaturesResponseToJSON(json: any): CountFeaturesResponse {
  return CountFeaturesResponseToJSONTyped(json, false);
}

export function CountFeaturesResponseToJSONTyped(
  value?: CountFeaturesResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    data: CountResponseToJSON(value["data"]),
    params: CountFeaturesParamsToJSON(value["params"]),
  };
}
