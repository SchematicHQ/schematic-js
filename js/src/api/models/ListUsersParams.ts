/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * Input parameters
 * @export
 * @interface ListUsersParams
 */
export interface ListUsersParams {
  /**
   * Filter users by company ID (starts with comp_)
   * @type {string}
   * @memberof ListUsersParams
   */
  companyId?: string;
  /**
   * Filter users by multiple user IDs (starts with user_)
   * @type {Array<string>}
   * @memberof ListUsersParams
   */
  ids?: Array<string>;
  /**
   * Page limit (default 100)
   * @type {number}
   * @memberof ListUsersParams
   */
  limit?: number;
  /**
   * Page offset (default 0)
   * @type {number}
   * @memberof ListUsersParams
   */
  offset?: number;
  /**
   * Filter users by plan ID (starts with plan_)
   * @type {string}
   * @memberof ListUsersParams
   */
  planId?: string;
  /**
   * Search for users by name, keys or string traits
   * @type {string}
   * @memberof ListUsersParams
   */
  q?: string;
}

/**
 * Check if a given object implements the ListUsersParams interface.
 */
export function instanceOfListUsersParams(
  value: object,
): value is ListUsersParams {
  return true;
}

export function ListUsersParamsFromJSON(json: any): ListUsersParams {
  return ListUsersParamsFromJSONTyped(json, false);
}

export function ListUsersParamsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ListUsersParams {
  if (json == null) {
    return json;
  }
  return {
    companyId: json["company_id"] == null ? undefined : json["company_id"],
    ids: json["ids"] == null ? undefined : json["ids"],
    limit: json["limit"] == null ? undefined : json["limit"],
    offset: json["offset"] == null ? undefined : json["offset"],
    planId: json["plan_id"] == null ? undefined : json["plan_id"],
    q: json["q"] == null ? undefined : json["q"],
  };
}

export function ListUsersParamsToJSON(json: any): ListUsersParams {
  return ListUsersParamsToJSONTyped(json, false);
}

export function ListUsersParamsToJSONTyped(
  value?: ListUsersParams | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    company_id: value["companyId"],
    ids: value["ids"],
    limit: value["limit"],
    offset: value["offset"],
    plan_id: value["planId"],
    q: value["q"],
  };
}
