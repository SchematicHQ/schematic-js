/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { FeatureDetailResponseData } from "./FeatureDetailResponseData";
import {
  FeatureDetailResponseDataFromJSON,
  FeatureDetailResponseDataFromJSONTyped,
  FeatureDetailResponseDataToJSON,
  FeatureDetailResponseDataToJSONTyped,
} from "./FeatureDetailResponseData";
import type { CompanyDetailResponseData } from "./CompanyDetailResponseData";
import {
  CompanyDetailResponseDataFromJSON,
  CompanyDetailResponseDataFromJSONTyped,
  CompanyDetailResponseDataToJSON,
  CompanyDetailResponseDataToJSONTyped,
} from "./CompanyDetailResponseData";
import type { PlanResponseData } from "./PlanResponseData";
import {
  PlanResponseDataFromJSON,
  PlanResponseDataFromJSONTyped,
  PlanResponseDataToJSON,
  PlanResponseDataToJSONTyped,
} from "./PlanResponseData";

/**
 *
 * @export
 * @interface FeatureCompanyResponseData
 */
export interface FeatureCompanyResponseData {
  /**
   * Whether further usage is permitted.
   * @type {boolean}
   * @memberof FeatureCompanyResponseData
   */
  access: boolean;
  /**
   * The maximum amount of usage that is permitted; a null value indicates that unlimited usage is permitted.
   * @type {number}
   * @memberof FeatureCompanyResponseData
   */
  allocation?: number | null;
  /**
   * The type of allocation that is being used.
   * @type {string}
   * @memberof FeatureCompanyResponseData
   */
  allocationType: FeatureCompanyResponseDataAllocationTypeEnum;
  /**
   *
   * @type {CompanyDetailResponseData}
   * @memberof FeatureCompanyResponseData
   */
  company?: CompanyDetailResponseData;
  /**
   *
   * @type {Date}
   * @memberof FeatureCompanyResponseData
   */
  entitlementExpirationDate?: Date | null;
  /**
   *
   * @type {string}
   * @memberof FeatureCompanyResponseData
   */
  entitlementId: string;
  /**
   *
   * @type {string}
   * @memberof FeatureCompanyResponseData
   */
  entitlementType: string;
  /**
   *
   * @type {FeatureDetailResponseData}
   * @memberof FeatureCompanyResponseData
   */
  feature?: FeatureDetailResponseData;
  /**
   * The time at which the metric will resets.
   * @type {Date}
   * @memberof FeatureCompanyResponseData
   */
  metricResetAt?: Date | null;
  /**
   * If the period is current_month, when the month resets.
   * @type {string}
   * @memberof FeatureCompanyResponseData
   */
  monthReset?: string | null;
  /**
   * The period over which usage is measured.
   * @type {string}
   * @memberof FeatureCompanyResponseData
   */
  period?: string | null;
  /**
   *
   * @type {PlanResponseData}
   * @memberof FeatureCompanyResponseData
   */
  plan?: PlanResponseData;
  /**
   * The amount of usage that has been consumed; a null value indicates that usage is not being measured.
   * @type {number}
   * @memberof FeatureCompanyResponseData
   */
  usage?: number | null;
}

/**
 * @export
 */
export const FeatureCompanyResponseDataAllocationTypeEnum = {
  Boolean: "boolean",
  Numeric: "numeric",
  Trait: "trait",
  Unlimited: "unlimited",
} as const;
export type FeatureCompanyResponseDataAllocationTypeEnum =
  (typeof FeatureCompanyResponseDataAllocationTypeEnum)[keyof typeof FeatureCompanyResponseDataAllocationTypeEnum];

/**
 * Check if a given object implements the FeatureCompanyResponseData interface.
 */
export function instanceOfFeatureCompanyResponseData(
  value: object,
): value is FeatureCompanyResponseData {
  if (!("access" in value) || value["access"] === undefined) return false;
  if (!("allocationType" in value) || value["allocationType"] === undefined)
    return false;
  if (!("entitlementId" in value) || value["entitlementId"] === undefined)
    return false;
  if (!("entitlementType" in value) || value["entitlementType"] === undefined)
    return false;
  return true;
}

export function FeatureCompanyResponseDataFromJSON(
  json: any,
): FeatureCompanyResponseData {
  return FeatureCompanyResponseDataFromJSONTyped(json, false);
}

export function FeatureCompanyResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FeatureCompanyResponseData {
  if (json == null) {
    return json;
  }
  return {
    access: json["access"],
    allocation: json["allocation"] == null ? undefined : json["allocation"],
    allocationType: json["allocation_type"],
    company:
      json["company"] == null
        ? undefined
        : CompanyDetailResponseDataFromJSON(json["company"]),
    entitlementExpirationDate:
      json["entitlement_expiration_date"] == null
        ? undefined
        : new Date(json["entitlement_expiration_date"]),
    entitlementId: json["entitlement_id"],
    entitlementType: json["entitlement_type"],
    feature:
      json["feature"] == null
        ? undefined
        : FeatureDetailResponseDataFromJSON(json["feature"]),
    metricResetAt:
      json["metric_reset_at"] == null
        ? undefined
        : new Date(json["metric_reset_at"]),
    monthReset: json["month_reset"] == null ? undefined : json["month_reset"],
    period: json["period"] == null ? undefined : json["period"],
    plan:
      json["plan"] == null ? undefined : PlanResponseDataFromJSON(json["plan"]),
    usage: json["usage"] == null ? undefined : json["usage"],
  };
}

export function FeatureCompanyResponseDataToJSON(
  json: any,
): FeatureCompanyResponseData {
  return FeatureCompanyResponseDataToJSONTyped(json, false);
}

export function FeatureCompanyResponseDataToJSONTyped(
  value?: FeatureCompanyResponseData | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    access: value["access"],
    allocation: value["allocation"],
    allocation_type: value["allocationType"],
    company: CompanyDetailResponseDataToJSON(value["company"]),
    entitlement_expiration_date:
      value["entitlementExpirationDate"] == null
        ? undefined
        : (value["entitlementExpirationDate"] as any).toISOString(),
    entitlement_id: value["entitlementId"],
    entitlement_type: value["entitlementType"],
    feature: FeatureDetailResponseDataToJSON(value["feature"]),
    metric_reset_at:
      value["metricResetAt"] == null
        ? undefined
        : (value["metricResetAt"] as any).toISOString(),
    month_reset: value["monthReset"],
    period: value["period"],
    plan: PlanResponseDataToJSON(value["plan"]),
    usage: value["usage"],
  };
}
