/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface UpsertTraitRequestBody
 */
export interface UpsertTraitRequestBody {
  /**
   * Amount to increment the trait by (positive or negative)
   * @type {number}
   * @memberof UpsertTraitRequestBody
   */
  incr?: number | null;
  /**
   * Key/value pairs too identify a company or user
   * @type {{ [key: string]: string; }}
   * @memberof UpsertTraitRequestBody
   */
  keys: { [key: string]: string };
  /**
   * Value to set the trait to
   * @type {string}
   * @memberof UpsertTraitRequestBody
   */
  set?: string | null;
  /**
   * Name of the trait to update
   * @type {string}
   * @memberof UpsertTraitRequestBody
   */
  trait: string;
  /**
   * Unless this is set, the company or user will be created if it does not already exist
   * @type {boolean}
   * @memberof UpsertTraitRequestBody
   */
  updateOnly?: boolean | null;
}

/**
 * Check if a given object implements the UpsertTraitRequestBody interface.
 */
export function instanceOfUpsertTraitRequestBody(
  value: object,
): value is UpsertTraitRequestBody {
  if (!("keys" in value) || value["keys"] === undefined) return false;
  if (!("trait" in value) || value["trait"] === undefined) return false;
  return true;
}

export function UpsertTraitRequestBodyFromJSON(
  json: any,
): UpsertTraitRequestBody {
  return UpsertTraitRequestBodyFromJSONTyped(json, false);
}

export function UpsertTraitRequestBodyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UpsertTraitRequestBody {
  if (json == null) {
    return json;
  }
  return {
    incr: json["incr"] == null ? undefined : json["incr"],
    keys: json["keys"],
    set: json["set"] == null ? undefined : json["set"],
    trait: json["trait"],
    updateOnly: json["update_only"] == null ? undefined : json["update_only"],
  };
}

export function UpsertTraitRequestBodyToJSON(
  json: any,
): UpsertTraitRequestBody {
  return UpsertTraitRequestBodyToJSONTyped(json, false);
}

export function UpsertTraitRequestBodyToJSONTyped(
  value?: UpsertTraitRequestBody | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    incr: value["incr"],
    keys: value["keys"],
    set: value["set"],
    trait: value["trait"],
    update_only: value["updateOnly"],
  };
}
