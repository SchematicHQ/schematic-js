/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface EventBodyTrack
 */
export interface EventBodyTrack {
  /**
   * Key-value pairs to identify company associated with track event
   * @type {{ [key: string]: string; }}
   * @memberof EventBodyTrack
   */
  company?: { [key: string]: string };
  /**
   * The name of the type of track event
   * @type {string}
   * @memberof EventBodyTrack
   */
  event: string;
  /**
   * Optionally specify the quantity of the event
   * @type {number}
   * @memberof EventBodyTrack
   */
  quantity?: number;
  /**
   * A map of trait names to trait values
   * @type {object}
   * @memberof EventBodyTrack
   */
  traits?: object;
  /**
   * Key-value pairs to identify user associated with track event
   * @type {{ [key: string]: string; }}
   * @memberof EventBodyTrack
   */
  user?: { [key: string]: string };
}

/**
 * Check if a given object implements the EventBodyTrack interface.
 */
export function instanceOfEventBodyTrack(
  value: object,
): value is EventBodyTrack {
  if (!("event" in value) || value["event"] === undefined) return false;
  return true;
}

export function EventBodyTrackFromJSON(json: any): EventBodyTrack {
  return EventBodyTrackFromJSONTyped(json, false);
}

export function EventBodyTrackFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): EventBodyTrack {
  if (json == null) {
    return json;
  }
  return {
    company: json["company"] == null ? undefined : json["company"],
    event: json["event"],
    quantity: json["quantity"] == null ? undefined : json["quantity"],
    traits: json["traits"] == null ? undefined : json["traits"],
    user: json["user"] == null ? undefined : json["user"],
  };
}

export function EventBodyTrackToJSON(json: any): EventBodyTrack {
  return EventBodyTrackToJSONTyped(json, false);
}

export function EventBodyTrackToJSONTyped(
  value?: EventBodyTrack | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    company: value["company"],
    event: value["event"],
    quantity: value["quantity"],
    traits: value["traits"],
    user: value["user"],
  };
}
