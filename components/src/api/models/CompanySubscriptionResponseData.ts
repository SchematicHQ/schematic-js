/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { BillingProductForSubscriptionResponseData } from "./BillingProductForSubscriptionResponseData";
import {
  BillingProductForSubscriptionResponseDataFromJSON,
  BillingProductForSubscriptionResponseDataFromJSONTyped,
  BillingProductForSubscriptionResponseDataToJSON,
} from "./BillingProductForSubscriptionResponseData";
import type { BillingSubscriptionDiscountView } from "./BillingSubscriptionDiscountView";
import {
  BillingSubscriptionDiscountViewFromJSON,
  BillingSubscriptionDiscountViewFromJSONTyped,
  BillingSubscriptionDiscountViewToJSON,
} from "./BillingSubscriptionDiscountView";
import type { InvoiceResponseData } from "./InvoiceResponseData";
import {
  InvoiceResponseDataFromJSON,
  InvoiceResponseDataFromJSONTyped,
  InvoiceResponseDataToJSON,
} from "./InvoiceResponseData";
import type { PaymentMethodResponseData } from "./PaymentMethodResponseData";
import {
  PaymentMethodResponseDataFromJSON,
  PaymentMethodResponseDataFromJSONTyped,
  PaymentMethodResponseDataToJSON,
} from "./PaymentMethodResponseData";

/**
 *
 * @export
 * @interface CompanySubscriptionResponseData
 */
export interface CompanySubscriptionResponseData {
  /**
   *
   * @type {string}
   * @memberof CompanySubscriptionResponseData
   */
  currency: string;
  /**
   *
   * @type {string}
   * @memberof CompanySubscriptionResponseData
   */
  customerExternalId: string;
  /**
   *
   * @type {Array<BillingSubscriptionDiscountView>}
   * @memberof CompanySubscriptionResponseData
   */
  discounts: Array<BillingSubscriptionDiscountView>;
  /**
   *
   * @type {Date}
   * @memberof CompanySubscriptionResponseData
   */
  expiredAt?: Date | null;
  /**
   *
   * @type {string}
   * @memberof CompanySubscriptionResponseData
   */
  interval: string;
  /**
   *
   * @type {InvoiceResponseData}
   * @memberof CompanySubscriptionResponseData
   */
  latestInvoice?: InvoiceResponseData;
  /**
   *
   * @type {PaymentMethodResponseData}
   * @memberof CompanySubscriptionResponseData
   */
  paymentMethod?: PaymentMethodResponseData;
  /**
   *
   * @type {Array<BillingProductForSubscriptionResponseData>}
   * @memberof CompanySubscriptionResponseData
   */
  products: Array<BillingProductForSubscriptionResponseData>;
  /**
   *
   * @type {string}
   * @memberof CompanySubscriptionResponseData
   */
  status: string;
  /**
   *
   * @type {string}
   * @memberof CompanySubscriptionResponseData
   */
  subscriptionExternalId: string;
  /**
   *
   * @type {number}
   * @memberof CompanySubscriptionResponseData
   */
  totalPrice: number;
}

/**
 * Check if a given object implements the CompanySubscriptionResponseData interface.
 */
export function instanceOfCompanySubscriptionResponseData(
  value: object,
): value is CompanySubscriptionResponseData {
  if (!("currency" in value) || value["currency"] === undefined) return false;
  if (
    !("customerExternalId" in value) ||
    value["customerExternalId"] === undefined
  )
    return false;
  if (!("discounts" in value) || value["discounts"] === undefined) return false;
  if (!("interval" in value) || value["interval"] === undefined) return false;
  if (!("products" in value) || value["products"] === undefined) return false;
  if (!("status" in value) || value["status"] === undefined) return false;
  if (
    !("subscriptionExternalId" in value) ||
    value["subscriptionExternalId"] === undefined
  )
    return false;
  if (!("totalPrice" in value) || value["totalPrice"] === undefined)
    return false;
  return true;
}

export function CompanySubscriptionResponseDataFromJSON(
  json: any,
): CompanySubscriptionResponseData {
  return CompanySubscriptionResponseDataFromJSONTyped(json, false);
}

export function CompanySubscriptionResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CompanySubscriptionResponseData {
  if (json == null) {
    return json;
  }
  return {
    currency: json["currency"],
    customerExternalId: json["customer_external_id"],
    discounts: (json["discounts"] as Array<any>).map(
      BillingSubscriptionDiscountViewFromJSON,
    ),
    expiredAt:
      json["expired_at"] == null ? undefined : new Date(json["expired_at"]),
    interval: json["interval"],
    latestInvoice:
      json["latest_invoice"] == null
        ? undefined
        : InvoiceResponseDataFromJSON(json["latest_invoice"]),
    paymentMethod:
      json["payment_method"] == null
        ? undefined
        : PaymentMethodResponseDataFromJSON(json["payment_method"]),
    products: (json["products"] as Array<any>).map(
      BillingProductForSubscriptionResponseDataFromJSON,
    ),
    status: json["status"],
    subscriptionExternalId: json["subscription_external_id"],
    totalPrice: json["total_price"],
  };
}

export function CompanySubscriptionResponseDataToJSON(
  value?: CompanySubscriptionResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    currency: value["currency"],
    customer_external_id: value["customerExternalId"],
    discounts: (value["discounts"] as Array<any>).map(
      BillingSubscriptionDiscountViewToJSON,
    ),
    expired_at:
      value["expiredAt"] == null
        ? undefined
        : (value["expiredAt"] as any).toISOString(),
    interval: value["interval"],
    latest_invoice: InvoiceResponseDataToJSON(value["latestInvoice"]),
    payment_method: PaymentMethodResponseDataToJSON(value["paymentMethod"]),
    products: (value["products"] as Array<any>).map(
      BillingProductForSubscriptionResponseDataToJSON,
    ),
    status: value["status"],
    subscription_external_id: value["subscriptionExternalId"],
    total_price: value["totalPrice"],
  };
}
