/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * The created resource
 * @export
 * @interface PaymentMethodResponseData
 */
export interface PaymentMethodResponseData {
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  cardBrand?: string | null;
  /**
   *
   * @type {number}
   * @memberof PaymentMethodResponseData
   */
  cardExpMonth?: number | null;
  /**
   *
   * @type {number}
   * @memberof PaymentMethodResponseData
   */
  cardExpYear?: number | null;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  cardLast4?: string | null;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  companyId?: string | null;
  /**
   *
   * @type {Date}
   * @memberof PaymentMethodResponseData
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  customerExternalId: string;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  environmentId: string;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  externalId: string;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  paymentMethodType: string;
  /**
   *
   * @type {string}
   * @memberof PaymentMethodResponseData
   */
  subscriptionExternalId?: string | null;
  /**
   *
   * @type {Date}
   * @memberof PaymentMethodResponseData
   */
  updatedAt: Date;
}

/**
 * Check if a given object implements the PaymentMethodResponseData interface.
 */
export function instanceOfPaymentMethodResponseData(
  value: object,
): value is PaymentMethodResponseData {
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (
    !("customerExternalId" in value) ||
    value["customerExternalId"] === undefined
  )
    return false;
  if (!("environmentId" in value) || value["environmentId"] === undefined)
    return false;
  if (!("externalId" in value) || value["externalId"] === undefined)
    return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (
    !("paymentMethodType" in value) ||
    value["paymentMethodType"] === undefined
  )
    return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  return true;
}

export function PaymentMethodResponseDataFromJSON(
  json: any,
): PaymentMethodResponseData {
  return PaymentMethodResponseDataFromJSONTyped(json, false);
}

export function PaymentMethodResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PaymentMethodResponseData {
  if (json == null) {
    return json;
  }
  return {
    cardBrand: json["card_brand"] == null ? undefined : json["card_brand"],
    cardExpMonth:
      json["card_exp_month"] == null ? undefined : json["card_exp_month"],
    cardExpYear:
      json["card_exp_year"] == null ? undefined : json["card_exp_year"],
    cardLast4: json["card_last4"] == null ? undefined : json["card_last4"],
    companyId: json["company_id"] == null ? undefined : json["company_id"],
    createdAt: new Date(json["created_at"]),
    customerExternalId: json["customer_external_id"],
    environmentId: json["environment_id"],
    externalId: json["external_id"],
    id: json["id"],
    paymentMethodType: json["payment_method_type"],
    subscriptionExternalId:
      json["subscription_external_id"] == null
        ? undefined
        : json["subscription_external_id"],
    updatedAt: new Date(json["updated_at"]),
  };
}

export function PaymentMethodResponseDataToJSON(
  value?: PaymentMethodResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    card_brand: value["cardBrand"],
    card_exp_month: value["cardExpMonth"],
    card_exp_year: value["cardExpYear"],
    card_last4: value["cardLast4"],
    company_id: value["companyId"],
    created_at: value["createdAt"].toISOString(),
    customer_external_id: value["customerExternalId"],
    environment_id: value["environmentId"],
    external_id: value["externalId"],
    id: value["id"],
    payment_method_type: value["paymentMethodType"],
    subscription_external_id: value["subscriptionExternalId"],
    updated_at: value["updatedAt"].toISOString(),
  };
}
