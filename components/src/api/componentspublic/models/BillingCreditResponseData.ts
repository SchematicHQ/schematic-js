/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { BillingProductResponseData } from "./BillingProductResponseData";
import {
  BillingProductResponseDataFromJSON,
  BillingProductResponseDataFromJSONTyped,
  BillingProductResponseDataToJSON,
} from "./BillingProductResponseData";
import type { BillingPriceResponseData } from "./BillingPriceResponseData";
import {
  BillingPriceResponseDataFromJSON,
  BillingPriceResponseDataFromJSONTyped,
  BillingPriceResponseDataToJSON,
} from "./BillingPriceResponseData";

/**
 *
 * @export
 * @interface BillingCreditResponseData
 */
export interface BillingCreditResponseData {
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  burnStrategy: string;
  /**
   *
   * @type {Date}
   * @memberof BillingCreditResponseData
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  defaultExpiryUnit: string;
  /**
   *
   * @type {number}
   * @memberof BillingCreditResponseData
   */
  defaultExpiryUnitCount?: number | null;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  defaultRolloverPolicy: string;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  icon?: string | null;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  id: string;
  /**
   *
   * @type {BillingPriceResponseData}
   * @memberof BillingCreditResponseData
   */
  monthlyPrice?: BillingPriceResponseData;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  pluralName?: string | null;
  /**
   *
   * @type {BillingProductResponseData}
   * @memberof BillingCreditResponseData
   */
  product?: BillingProductResponseData;
  /**
   *
   * @type {string}
   * @memberof BillingCreditResponseData
   */
  singularName?: string | null;
  /**
   *
   * @type {Date}
   * @memberof BillingCreditResponseData
   */
  updatedAt: Date;
  /**
   *
   * @type {BillingPriceResponseData}
   * @memberof BillingCreditResponseData
   */
  yearlyPrice?: BillingPriceResponseData;
}

/**
 * Check if a given object implements the BillingCreditResponseData interface.
 */
export function instanceOfBillingCreditResponseData(
  value: object,
): value is BillingCreditResponseData {
  if (!("burnStrategy" in value) || value["burnStrategy"] === undefined)
    return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (
    !("defaultExpiryUnit" in value) ||
    value["defaultExpiryUnit"] === undefined
  )
    return false;
  if (
    !("defaultRolloverPolicy" in value) ||
    value["defaultRolloverPolicy"] === undefined
  )
    return false;
  if (!("description" in value) || value["description"] === undefined)
    return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  return true;
}

export function BillingCreditResponseDataFromJSON(
  json: any,
): BillingCreditResponseData {
  return BillingCreditResponseDataFromJSONTyped(json, false);
}

export function BillingCreditResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): BillingCreditResponseData {
  if (json == null) {
    return json;
  }
  return {
    burnStrategy: json["burn_strategy"],
    createdAt: new Date(json["created_at"]),
    defaultExpiryUnit: json["default_expiry_unit"],
    defaultExpiryUnitCount:
      json["default_expiry_unit_count"] == null
        ? undefined
        : json["default_expiry_unit_count"],
    defaultRolloverPolicy: json["default_rollover_policy"],
    description: json["description"],
    icon: json["icon"] == null ? undefined : json["icon"],
    id: json["id"],
    monthlyPrice:
      json["monthly_price"] == null
        ? undefined
        : BillingPriceResponseDataFromJSON(json["monthly_price"]),
    name: json["name"],
    pluralName: json["plural_name"] == null ? undefined : json["plural_name"],
    product:
      json["product"] == null
        ? undefined
        : BillingProductResponseDataFromJSON(json["product"]),
    singularName:
      json["singular_name"] == null ? undefined : json["singular_name"],
    updatedAt: new Date(json["updated_at"]),
    yearlyPrice:
      json["yearly_price"] == null
        ? undefined
        : BillingPriceResponseDataFromJSON(json["yearly_price"]),
  };
}

export function BillingCreditResponseDataToJSON(
  value?: BillingCreditResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    burn_strategy: value["burnStrategy"],
    created_at: value["createdAt"].toISOString(),
    default_expiry_unit: value["defaultExpiryUnit"],
    default_expiry_unit_count: value["defaultExpiryUnitCount"],
    default_rollover_policy: value["defaultRolloverPolicy"],
    description: value["description"],
    icon: value["icon"],
    id: value["id"],
    monthly_price: BillingPriceResponseDataToJSON(value["monthlyPrice"]),
    name: value["name"],
    plural_name: value["pluralName"],
    product: BillingProductResponseDataToJSON(value["product"]),
    singular_name: value["singularName"],
    updated_at: value["updatedAt"].toISOString(),
    yearly_price: BillingPriceResponseDataToJSON(value["yearlyPrice"]),
  };
}
