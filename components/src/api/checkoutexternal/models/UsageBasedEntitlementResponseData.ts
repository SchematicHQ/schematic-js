/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { BillingPriceView } from "./BillingPriceView";
import {
  BillingPriceViewFromJSON,
  BillingPriceViewFromJSONTyped,
  BillingPriceViewToJSON,
} from "./BillingPriceView";

/**
 *
 * @export
 * @interface UsageBasedEntitlementResponseData
 */
export interface UsageBasedEntitlementResponseData {
  /**
   *
   * @type {number}
   * @memberof UsageBasedEntitlementResponseData
   */
  consumptionRate?: number | null;
  /**
   *
   * @type {string}
   * @memberof UsageBasedEntitlementResponseData
   */
  featureId: string;
  /**
   *
   * @type {BillingPriceView}
   * @memberof UsageBasedEntitlementResponseData
   */
  meteredPrice?: BillingPriceView;
  /**
   *
   * @type {string}
   * @memberof UsageBasedEntitlementResponseData
   */
  metricPeriod?: string | null;
  /**
   *
   * @type {string}
   * @memberof UsageBasedEntitlementResponseData
   */
  metricPeriodMonthReset?: string | null;
  /**
   *
   * @type {BillingPriceView}
   * @memberof UsageBasedEntitlementResponseData
   */
  monthlyUsageBasedPrice?: BillingPriceView;
  /**
   *
   * @type {string}
   * @memberof UsageBasedEntitlementResponseData
   */
  priceBehavior?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof UsageBasedEntitlementResponseData
   */
  valueBool?: boolean | null;
  /**
   *
   * @type {number}
   * @memberof UsageBasedEntitlementResponseData
   */
  valueNumeric?: number | null;
  /**
   *
   * @type {string}
   * @memberof UsageBasedEntitlementResponseData
   */
  valueType: string;
  /**
   *
   * @type {BillingPriceView}
   * @memberof UsageBasedEntitlementResponseData
   */
  yearlyUsageBasedPrice?: BillingPriceView;
}

/**
 * Check if a given object implements the UsageBasedEntitlementResponseData interface.
 */
export function instanceOfUsageBasedEntitlementResponseData(
  value: object,
): value is UsageBasedEntitlementResponseData {
  if (!("featureId" in value) || value["featureId"] === undefined) return false;
  if (!("valueType" in value) || value["valueType"] === undefined) return false;
  return true;
}

export function UsageBasedEntitlementResponseDataFromJSON(
  json: any,
): UsageBasedEntitlementResponseData {
  return UsageBasedEntitlementResponseDataFromJSONTyped(json, false);
}

export function UsageBasedEntitlementResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UsageBasedEntitlementResponseData {
  if (json == null) {
    return json;
  }
  return {
    consumptionRate:
      json["consumption_rate"] == null ? undefined : json["consumption_rate"],
    featureId: json["feature_id"],
    meteredPrice:
      json["metered_price"] == null
        ? undefined
        : BillingPriceViewFromJSON(json["metered_price"]),
    metricPeriod:
      json["metric_period"] == null ? undefined : json["metric_period"],
    metricPeriodMonthReset:
      json["metric_period_month_reset"] == null
        ? undefined
        : json["metric_period_month_reset"],
    monthlyUsageBasedPrice:
      json["monthly_usage_based_price"] == null
        ? undefined
        : BillingPriceViewFromJSON(json["monthly_usage_based_price"]),
    priceBehavior:
      json["price_behavior"] == null ? undefined : json["price_behavior"],
    valueBool: json["value_bool"] == null ? undefined : json["value_bool"],
    valueNumeric:
      json["value_numeric"] == null ? undefined : json["value_numeric"],
    valueType: json["value_type"],
    yearlyUsageBasedPrice:
      json["yearly_usage_based_price"] == null
        ? undefined
        : BillingPriceViewFromJSON(json["yearly_usage_based_price"]),
  };
}

export function UsageBasedEntitlementResponseDataToJSON(
  value?: UsageBasedEntitlementResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    consumption_rate: value["consumptionRate"],
    feature_id: value["featureId"],
    metered_price: BillingPriceViewToJSON(value["meteredPrice"]),
    metric_period: value["metricPeriod"],
    metric_period_month_reset: value["metricPeriodMonthReset"],
    monthly_usage_based_price: BillingPriceViewToJSON(
      value["monthlyUsageBasedPrice"],
    ),
    price_behavior: value["priceBehavior"],
    value_bool: value["valueBool"],
    value_numeric: value["valueNumeric"],
    value_type: value["valueType"],
    yearly_usage_based_price: BillingPriceViewToJSON(
      value["yearlyUsageBasedPrice"],
    ),
  };
}
