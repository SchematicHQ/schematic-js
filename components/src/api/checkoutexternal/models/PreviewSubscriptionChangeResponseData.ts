/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { PreviewSubscriptionFinanceResponseData } from "./PreviewSubscriptionFinanceResponseData";
import {
  PreviewSubscriptionFinanceResponseDataFromJSON,
  PreviewSubscriptionFinanceResponseDataFromJSONTyped,
  PreviewSubscriptionFinanceResponseDataToJSON,
} from "./PreviewSubscriptionFinanceResponseData";
import type { FeatureUsageResponseData } from "./FeatureUsageResponseData";
import {
  FeatureUsageResponseDataFromJSON,
  FeatureUsageResponseDataFromJSONTyped,
  FeatureUsageResponseDataToJSON,
} from "./FeatureUsageResponseData";

/**
 * The created resource
 * @export
 * @interface PreviewSubscriptionChangeResponseData
 */
export interface PreviewSubscriptionChangeResponseData {
  /**
   *
   * @type {number}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  amountOff: number;
  /**
   *
   * @type {number}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  dueNow: number;
  /**
   *
   * @type {PreviewSubscriptionFinanceResponseData}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  finance?: PreviewSubscriptionFinanceResponseData;
  /**
   *
   * @type {number}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  newCharges: number;
  /**
   *
   * @type {boolean}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  paymentMethodRequired: boolean;
  /**
   *
   * @type {number}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  percentOff: number;
  /**
   *
   * @type {Date}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  periodStart: Date;
  /**
   *
   * @type {boolean}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  promoCodeApplied: boolean;
  /**
   *
   * @type {number}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  proration: number;
  /**
   *
   * @type {Date}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  trialEnd?: Date | null;
  /**
   *
   * @type {Array<FeatureUsageResponseData>}
   * @memberof PreviewSubscriptionChangeResponseData
   */
  usageViolations: Array<FeatureUsageResponseData>;
}

/**
 * Check if a given object implements the PreviewSubscriptionChangeResponseData interface.
 */
export function instanceOfPreviewSubscriptionChangeResponseData(
  value: object,
): value is PreviewSubscriptionChangeResponseData {
  if (!("amountOff" in value) || value["amountOff"] === undefined) return false;
  if (!("dueNow" in value) || value["dueNow"] === undefined) return false;
  if (!("newCharges" in value) || value["newCharges"] === undefined)
    return false;
  if (
    !("paymentMethodRequired" in value) ||
    value["paymentMethodRequired"] === undefined
  )
    return false;
  if (!("percentOff" in value) || value["percentOff"] === undefined)
    return false;
  if (!("periodStart" in value) || value["periodStart"] === undefined)
    return false;
  if (!("promoCodeApplied" in value) || value["promoCodeApplied"] === undefined)
    return false;
  if (!("proration" in value) || value["proration"] === undefined) return false;
  if (!("usageViolations" in value) || value["usageViolations"] === undefined)
    return false;
  return true;
}

export function PreviewSubscriptionChangeResponseDataFromJSON(
  json: any,
): PreviewSubscriptionChangeResponseData {
  return PreviewSubscriptionChangeResponseDataFromJSONTyped(json, false);
}

export function PreviewSubscriptionChangeResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PreviewSubscriptionChangeResponseData {
  if (json == null) {
    return json;
  }
  return {
    amountOff: json["amount_off"],
    dueNow: json["due_now"],
    finance:
      json["finance"] == null
        ? undefined
        : PreviewSubscriptionFinanceResponseDataFromJSON(json["finance"]),
    newCharges: json["new_charges"],
    paymentMethodRequired: json["payment_method_required"],
    percentOff: json["percent_off"],
    periodStart: new Date(json["period_start"]),
    promoCodeApplied: json["promo_code_applied"],
    proration: json["proration"],
    trialEnd:
      json["trial_end"] == null ? undefined : new Date(json["trial_end"]),
    usageViolations: (json["usage_violations"] as Array<any>).map(
      FeatureUsageResponseDataFromJSON,
    ),
  };
}

export function PreviewSubscriptionChangeResponseDataToJSON(
  value?: PreviewSubscriptionChangeResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    amount_off: value["amountOff"],
    due_now: value["dueNow"],
    finance: PreviewSubscriptionFinanceResponseDataToJSON(value["finance"]),
    new_charges: value["newCharges"],
    payment_method_required: value["paymentMethodRequired"],
    percent_off: value["percentOff"],
    period_start: value["periodStart"].toISOString(),
    promo_code_applied: value["promoCodeApplied"],
    proration: value["proration"],
    trial_end:
      value["trialEnd"] == null
        ? undefined
        : (value["trialEnd"] as any).toISOString(),
    usage_violations: (value["usageViolations"] as Array<any>).map(
      FeatureUsageResponseDataToJSON,
    ),
  };
}
