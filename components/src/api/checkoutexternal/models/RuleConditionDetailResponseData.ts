/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EntityTraitDefinitionResponseData } from "./EntityTraitDefinitionResponseData";
import {
  EntityTraitDefinitionResponseDataFromJSON,
  EntityTraitDefinitionResponseDataFromJSONTyped,
  EntityTraitDefinitionResponseDataToJSON,
} from "./EntityTraitDefinitionResponseData";
import type { PreviewObjectResponseData } from "./PreviewObjectResponseData";
import {
  PreviewObjectResponseDataFromJSON,
  PreviewObjectResponseDataFromJSONTyped,
  PreviewObjectResponseDataToJSON,
} from "./PreviewObjectResponseData";

/**
 *
 * @export
 * @interface RuleConditionDetailResponseData
 */
export interface RuleConditionDetailResponseData {
  /**
   *
   * @type {EntityTraitDefinitionResponseData}
   * @memberof RuleConditionDetailResponseData
   */
  comparisonTrait?: EntityTraitDefinitionResponseData;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  comparisonTraitId?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  conditionGroupId?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  conditionType: string;
  /**
   *
   * @type {Date}
   * @memberof RuleConditionDetailResponseData
   */
  createdAt: Date;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  environmentId: string;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  eventSubtype?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  flagId?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  metricPeriod?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  metricPeriodMonthReset?: string | null;
  /**
   *
   * @type {number}
   * @memberof RuleConditionDetailResponseData
   */
  metricValue?: number | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  operator: string;
  /**
   *
   * @type {Array<string>}
   * @memberof RuleConditionDetailResponseData
   */
  resourceIds: Array<string>;
  /**
   *
   * @type {Array<PreviewObjectResponseData>}
   * @memberof RuleConditionDetailResponseData
   */
  resources: Array<PreviewObjectResponseData>;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  ruleId: string;
  /**
   *
   * @type {EntityTraitDefinitionResponseData}
   * @memberof RuleConditionDetailResponseData
   */
  trait?: EntityTraitDefinitionResponseData;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  traitEntityType?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  traitId?: string | null;
  /**
   *
   * @type {string}
   * @memberof RuleConditionDetailResponseData
   */
  traitValue: string;
  /**
   *
   * @type {Date}
   * @memberof RuleConditionDetailResponseData
   */
  updatedAt: Date;
}

/**
 * Check if a given object implements the RuleConditionDetailResponseData interface.
 */
export function instanceOfRuleConditionDetailResponseData(
  value: object,
): value is RuleConditionDetailResponseData {
  if (!("conditionType" in value) || value["conditionType"] === undefined)
    return false;
  if (!("createdAt" in value) || value["createdAt"] === undefined) return false;
  if (!("environmentId" in value) || value["environmentId"] === undefined)
    return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("operator" in value) || value["operator"] === undefined) return false;
  if (!("resourceIds" in value) || value["resourceIds"] === undefined)
    return false;
  if (!("resources" in value) || value["resources"] === undefined) return false;
  if (!("ruleId" in value) || value["ruleId"] === undefined) return false;
  if (!("traitValue" in value) || value["traitValue"] === undefined)
    return false;
  if (!("updatedAt" in value) || value["updatedAt"] === undefined) return false;
  return true;
}

export function RuleConditionDetailResponseDataFromJSON(
  json: any,
): RuleConditionDetailResponseData {
  return RuleConditionDetailResponseDataFromJSONTyped(json, false);
}

export function RuleConditionDetailResponseDataFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): RuleConditionDetailResponseData {
  if (json == null) {
    return json;
  }
  return {
    comparisonTrait:
      json["comparison_trait"] == null
        ? undefined
        : EntityTraitDefinitionResponseDataFromJSON(json["comparison_trait"]),
    comparisonTraitId:
      json["comparison_trait_id"] == null
        ? undefined
        : json["comparison_trait_id"],
    conditionGroupId:
      json["condition_group_id"] == null
        ? undefined
        : json["condition_group_id"],
    conditionType: json["condition_type"],
    createdAt: new Date(json["created_at"]),
    environmentId: json["environment_id"],
    eventSubtype:
      json["event_subtype"] == null ? undefined : json["event_subtype"],
    flagId: json["flag_id"] == null ? undefined : json["flag_id"],
    id: json["id"],
    metricPeriod:
      json["metric_period"] == null ? undefined : json["metric_period"],
    metricPeriodMonthReset:
      json["metric_period_month_reset"] == null
        ? undefined
        : json["metric_period_month_reset"],
    metricValue:
      json["metric_value"] == null ? undefined : json["metric_value"],
    operator: json["operator"],
    resourceIds: json["resource_ids"],
    resources: (json["resources"] as Array<any>).map(
      PreviewObjectResponseDataFromJSON,
    ),
    ruleId: json["rule_id"],
    trait:
      json["trait"] == null
        ? undefined
        : EntityTraitDefinitionResponseDataFromJSON(json["trait"]),
    traitEntityType:
      json["trait_entity_type"] == null ? undefined : json["trait_entity_type"],
    traitId: json["trait_id"] == null ? undefined : json["trait_id"],
    traitValue: json["trait_value"],
    updatedAt: new Date(json["updated_at"]),
  };
}

export function RuleConditionDetailResponseDataToJSON(
  value?: RuleConditionDetailResponseData | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    comparison_trait: EntityTraitDefinitionResponseDataToJSON(
      value["comparisonTrait"],
    ),
    comparison_trait_id: value["comparisonTraitId"],
    condition_group_id: value["conditionGroupId"],
    condition_type: value["conditionType"],
    created_at: value["createdAt"].toISOString(),
    environment_id: value["environmentId"],
    event_subtype: value["eventSubtype"],
    flag_id: value["flagId"],
    id: value["id"],
    metric_period: value["metricPeriod"],
    metric_period_month_reset: value["metricPeriodMonthReset"],
    metric_value: value["metricValue"],
    operator: value["operator"],
    resource_ids: value["resourceIds"],
    resources: (value["resources"] as Array<any>).map(
      PreviewObjectResponseDataToJSON,
    ),
    rule_id: value["ruleId"],
    trait: EntityTraitDefinitionResponseDataToJSON(value["trait"]),
    trait_entity_type: value["traitEntityType"],
    trait_id: value["traitId"],
    trait_value: value["traitValue"],
    updated_at: value["updatedAt"].toISOString(),
  };
}
