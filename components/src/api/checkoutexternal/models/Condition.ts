/* tslint:disable */
/* eslint-disable */
/**
 * Schematic API
 * Schematic API
 *
 * The version of the OpenAPI document: 0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TraitDefinition } from "./TraitDefinition";
import {
  TraitDefinitionFromJSON,
  TraitDefinitionFromJSONTyped,
  TraitDefinitionToJSON,
} from "./TraitDefinition";

/**
 *
 * @export
 * @interface Condition
 */
export interface Condition {
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  accountId: string;
  /**
   *
   * @type {TraitDefinition}
   * @memberof Condition
   */
  comparisonTraitDefinition?: TraitDefinition;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  conditionType: string;
  /**
   *
   * @type {number}
   * @memberof Condition
   */
  consumptionRate?: number | null;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  creditId?: string | null;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  environmentId: string;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  eventSubtype?: string | null;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  metricPeriod?: string | null;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  metricPeriodMonthReset?: string | null;
  /**
   *
   * @type {number}
   * @memberof Condition
   */
  metricValue?: number | null;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  operator: string;
  /**
   *
   * @type {Array<string>}
   * @memberof Condition
   */
  resourceIds: Array<string>;
  /**
   *
   * @type {TraitDefinition}
   * @memberof Condition
   */
  traitDefinition?: TraitDefinition;
  /**
   *
   * @type {string}
   * @memberof Condition
   */
  traitValue: string;
}

/**
 * Check if a given object implements the Condition interface.
 */
export function instanceOfCondition(value: object): value is Condition {
  if (!("accountId" in value) || value["accountId"] === undefined) return false;
  if (!("conditionType" in value) || value["conditionType"] === undefined)
    return false;
  if (!("environmentId" in value) || value["environmentId"] === undefined)
    return false;
  if (!("id" in value) || value["id"] === undefined) return false;
  if (!("operator" in value) || value["operator"] === undefined) return false;
  if (!("resourceIds" in value) || value["resourceIds"] === undefined)
    return false;
  if (!("traitValue" in value) || value["traitValue"] === undefined)
    return false;
  return true;
}

export function ConditionFromJSON(json: any): Condition {
  return ConditionFromJSONTyped(json, false);
}

export function ConditionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Condition {
  if (json == null) {
    return json;
  }
  return {
    accountId: json["account_id"],
    comparisonTraitDefinition:
      json["comparison_trait_definition"] == null
        ? undefined
        : TraitDefinitionFromJSON(json["comparison_trait_definition"]),
    conditionType: json["condition_type"],
    consumptionRate:
      json["consumption_rate"] == null ? undefined : json["consumption_rate"],
    creditId: json["credit_id"] == null ? undefined : json["credit_id"],
    environmentId: json["environment_id"],
    eventSubtype:
      json["event_subtype"] == null ? undefined : json["event_subtype"],
    id: json["id"],
    metricPeriod:
      json["metric_period"] == null ? undefined : json["metric_period"],
    metricPeriodMonthReset:
      json["metric_period_month_reset"] == null
        ? undefined
        : json["metric_period_month_reset"],
    metricValue:
      json["metric_value"] == null ? undefined : json["metric_value"],
    operator: json["operator"],
    resourceIds: json["resource_ids"],
    traitDefinition:
      json["trait_definition"] == null
        ? undefined
        : TraitDefinitionFromJSON(json["trait_definition"]),
    traitValue: json["trait_value"],
  };
}

export function ConditionToJSON(value?: Condition | null): any {
  if (value == null) {
    return value;
  }
  return {
    account_id: value["accountId"],
    comparison_trait_definition: TraitDefinitionToJSON(
      value["comparisonTraitDefinition"],
    ),
    condition_type: value["conditionType"],
    consumption_rate: value["consumptionRate"],
    credit_id: value["creditId"],
    environment_id: value["environmentId"],
    event_subtype: value["eventSubtype"],
    id: value["id"],
    metric_period: value["metricPeriod"],
    metric_period_month_reset: value["metricPeriodMonthReset"],
    metric_value: value["metricValue"],
    operator: value["operator"],
    resource_ids: value["resourceIds"],
    trait_definition: TraitDefinitionToJSON(value["traitDefinition"]),
    trait_value: value["traitValue"],
  };
}
